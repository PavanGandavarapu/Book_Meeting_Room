@model BookMeetingRoom.Models.ViewModels.RoomListVM
@{
  ViewBag.Title = "Index";
}

<div class="d-flex flex-row align-items-center justify-content-between">
  <h4 class="page-title">Search your meeting room</h4>
</div>
<div class="line"></div>
@Html.Raw(ViewBag.Alert)


<section class="d-flex justify-content-between flex-wrap">

  <div class="room-search-filter" style="width:28%;">
    <div class="card" style="">
      <div class="card-body">
        @using (Html.BeginForm())
        {
          <div class="form-group">
            @Html.LabelFor(m => m.MeetingTypeId)
            @Html.DropDownListFor(m => m.MeetingTypeId, Model.MeetingTypes, "-- Select Meeting Type --", new { @class = "custom-select" })
            @Html.ValidationMessageFor(m => m.MeetingTypeId)
          </div>
          <div class="form-group">
            @Html.LabelFor(m => m.Location)
            @Html.DropDownListFor(m => m.Location, Model.LocationList, "-- Select Location --", new { @class = "custom-select" })
            @Html.ValidationMessageFor(m => m.Location)
          </div>
          <div class="form-group">
            @Html.LabelFor(m => m.Capacity)
            @Html.TextBoxFor(m => m.Capacity, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Capacity)
          </div>
          <div class="form-group">
            @Html.LabelFor(m => m.ReservationDate)
            @Html.TextBoxFor(m => m.ReservationDate, new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.ReservationDate)
          </div>
          <div class="form-group">
            @Html.LabelFor(m => m.FromTime)
            @Html.TextBoxFor(m => m.FromTime, new { @class = "form-control", type = "time" })
            @Html.ValidationMessageFor(m => m.FromTime)
          </div>
          <div class="form-group">
            @Html.LabelFor(m => m.ToTime)
            @Html.TextBoxFor(m => m.ToTime, new { @class = "form-control", type = "time" })
            @Html.ValidationMessageFor(m => m.ToTime)
          </div>

          <button class="btn btn-theme">Search</button>
        }
      </div>
    </div>
  </div>

  <div class="card" style="width:68%;">
    <div class="card-body">
      @if (!Model.RoomModels.Any())
      {
        <h5 class="text-center text-secondary">@Model.Message</h5>
      }
      @foreach (var data in Model.RoomModels)
      {
        <div class="card shadow p-2" style="width:100%;margin:1% 1%">
          <div class="card-body">
            <div class="row">
              <div class="col-md-4">
                <img src="~/Uploads//RoomImages/@data.RoomImageFileName" class="card-img-top w-100" alt="...">
              </div>
              <div class="col-md-8">
                <h5 class="text-center">@data.Title </h5>
                <div class="line"></div>
                <div class="d-flex justify-content-between">
                  <p> <strong><i class="fa-solid fa-couch"></i> Capacity </strong>: @data.Capacity (Seater)</p>
                </div>
                <div class="d-flex justify-content-between">
                  <div>
                    <p><strong><i class="fa-solid fa-location-pin"></i> Location </strong>: @data.Location</p>
                    <p><strong><i class="fa-solid fa-dollar-sign"></i> Price </strong>: @data.Price (Per hour)</p>
                  </div>
                  <div>
                    @Html.ActionLink("View details", "Details", new { id = data.RoomId }, new { @class = "btn btn-outline-success" })
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      }
    </div>
  </div>

</section>

@section scripts{
  @Scripts.Render("~/bundles/jqueryval")
}



